{"version":3,"sources":["lib.js","components/useDynamicScriptHook/useDynamicScriptHook.js","App.js","index.js"],"names":["useDynamicScriptHook","scriptUrl","scriptId","callback","useState","isLoaded","setIsLoaded","useEffect","existingScript","document","getElementById","script","createElement","src","id","body","appendChild","onload","remove","App","className","href","Object","values","Components","map","Component","ReactDOM","render","StrictMode"],"mappings":"sQAEeA,ECAc,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAAe,EAClCC,oBAAS,GADyB,mBAC3DC,EAD2D,KACjDC,EADiD,KAgClE,OA7BAC,qBAAU,WACR,IAAMC,EAAiBC,SAASC,eAAeR,GAE/C,IAAKM,EAAgB,CACnB,IAAMG,EAASF,SAASG,cAAc,UACtCD,EAAOE,IAAMZ,EACbU,EAAOG,GAAKZ,EACZO,SAASM,KAAKC,YAAYL,GAE1BA,EAAOM,OAAS,WACdX,GAAY,GACRH,GACFA,KAUN,OALIK,GAAkBL,IACpBG,GAAY,GACZH,KAGK,WACDK,GAAkBL,GACpBK,EAAeU,YAGlB,CAACjB,EAAWC,IAER,CAACG,EAAUC,ICfLa,MAhBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,oDACA,mBAAGC,KAAK,cAAR,0BACCC,OAAOC,OAAOC,GAAYC,KAAI,SAACC,GAC9B,OACE,8BACE,cAACA,EAAD,aCNZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,W","file":"static/js/main.d5def8f3.chunk.js","sourcesContent":["import useDynamicScriptHook from \"./components/useDynamicScriptHook/useDynamicScriptHook.js\";\n\nexport default useDynamicScriptHook;\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\n\nconst useDynamicScriptHook = ({ scriptUrl, scriptId, callback }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const existingScript = document.getElementById(scriptId);\n\n    if (!existingScript) {\n      const script = document.createElement(\"script\");\n      script.src = scriptUrl;\n      script.id = scriptId;\n      document.body.appendChild(script);\n\n      script.onload = () => {\n        setIsLoaded(true);\n        if (callback) {\n          callback();\n        }\n      };\n    }\n\n    if (existingScript && callback) {\n      setIsLoaded(true);\n      callback();\n    }\n\n    return () => {\n      if (existingScript && callback) {\n        existingScript.remove();\n      }\n    };\n  }, [scriptUrl, scriptId]);\n\n  return [isLoaded, setIsLoaded];\n};\n\nexport default useDynamicScriptHook;\n","import React from \"react\";\nimport * as Components from \"./lib.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>All Lib Components</h1>\n      <a href=\"./storybook\">Go Stroybook</a>\n      {Object.values(Components).map((Component) => {\n        return (\n          <div>\n            <Component />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}